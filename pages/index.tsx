import type { NextPage } from "next";
import dynamic from "next/dynamic";
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import React from "react";
import Container from "@mui/material/Container";
import ChartContainer from "../components/ChartContainer";
import Grid from "@mui/material/Grid";
import useSWR from "swr";
const apiURL = process.env.NEXT_PUBLIC_API_URL;

const Map = dynamic(() => import("../components/Map"), {
  loading: () => <p>Loading...</p>,
  ssr: false,
});
const Header = dynamic(() => import("../components/Header"), {
  loading: () => <p>Loading...</p>,
  ssr: false,
});

const Home: NextPage = () => {
  const multipleFetcher = (urls: string[]) => {
    const f = (url: string) =>
      fetch(url)
        .then((r) => r.json())
        .catch((err) => console.log(err));
    return Promise.all(urls.map((url) => f(url)));
  };

  //TODO implement requests using this function rather than multiple useEffect hooks
  const useMultipleRequests = (urls) => {
    // const urls = [apiURL + '/plume', apiURL + '/waqi', apiURL + '/waqi-archive', apiURL + '/aston',
    //               apiURL + '/defra?pollutants=PM2.5', apiURL + '/defra_bmld', apiURL + '/defra_bold']
    const { data, error } = useSWR(urls, multipleFetcher);
    // console.log(data)
    return {
      data: data,
      isError: !!error,
      isLoading: !data && !error,
      error: error,
    };
  };

  const { data: mapData, isLoading: mapDataLoading } = useMultipleRequests([
    // apiURL + "/aston",
    apiURL + "/defra?pollutants=pm2.5",
  ]);
  const pollutants = ["pm2.5", "pm10", "o3", "no2", "so2"];
  const chartUrls = pollutants.map(pollutant => `${apiURL}/stats?pollutants=${pollutant}`);
 
  const { data: chartData, isLoading: chartDataLoading } = useMultipleRequests(chartUrls);
  
  let map, chart;
  if (mapDataLoading) {
    map = <div>Loading map...</div>;
    //TODO replace with placeholder component
  } else if (mapData) {
    map = <Map combinedData={mapData} />;
  }
  if (chartDataLoading) {
    //TODO replace with placeholder components (based on chartUrls.length)
    chart = <div>Loading charts...</div>;
  } else if (chartData) {
    chart = (
      <>
        {chartData.map((chart) => (
          <ChartContainer
            chart={chart}
            //TODO this key is so disgusting haha there has to be a way to simplify it
            //retrieving pollutant name
            key={Object.keys(chart.year[0])[1] + "container"}
          />
        ))}
      </>
    );
  }
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* <Header></Header> */}
      <main className={styles.main}>
        <Container fixed sx={{ minWidth: "250px" }}>
          {/* {mapData && (
            <Map combinedData={mapData}/>
          )} */}
          {map}
        </Container>
        <Container maxWidth="lg" sx={{ mt: 4, mb: 4 }}>
          <Grid
            container
            spacing={{ xs: 2, md: 3 }}
            columns={{ xs: 1, sm: 4, md: 12 }}
          >
            {/* {chartData && (
              <>
                {chartData.map((chart) => (
                  <ChartContainer chart={chart} 
                  //TODO this key is so disgusting haha there has to be a way to simplify it
                  key={Object.keys(JSON.parse(chart.year)[0])[1]+'container'} />
                ))}
              </>
            )} */}
            {chart}
          </Grid>
          {/* <Copyright sx={{ pt: 4 }} /> */}
        </Container>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

export default Home;
